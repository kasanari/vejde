
domain test_domain {
  
	requirements = { 
		reward-deterministic // this domain does not use a stochastic reward
	};
	
	types {
  		button : object;
		machine : object;
	};
      
	pvariables { 
    		  		    		  		
		CONNECTED(button, machine) : { non-fluent, bool, default = false };
		PAYOUT(machine) : { non-fluent, real, default = 0.0 };

		press(button) : { action-fluent, bool, default = false }; 

		active(machine) : { interm-fluent, bool};
	
	};
	
	cpfs {
  
		active(?m) = exists_{?b : button} [press(?b) & CONNECTED(?b, ?m)];
	
	};
  
	reward = [sum_{?m : machine} [PAYOUT(?m) * active(?m)]];
}