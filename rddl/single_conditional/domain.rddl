
domain conditional_bandit {
  
	requirements = { 
		//reward-deterministic // this domain does not use a stochastic reward
	};
	
	types {
  		button : object;
	};
      
	pvariables { 
    		  		    		  		
		LIGHT_PROB : { non-fluent, real, default = 0.0 };

		press(button) : { action-fluent, bool, default = false}; 

		blue_light(button) : { state-fluent, bool, default=false};

		red_light(button) : { state-fluent, bool, default=false};

		green_light(button) : { state-fluent, bool, default=false};
	

	};
	
	cpfs {
  
		active(?m) = exists_{?b : button} [press(?b) & CONNECTED(?b, ?m)];

		blue_light'(?m) = if (blue_light(?m)) then false else Bernoulli(LIGHT_PROB);
		red_light'(?m) = if (red_light(?m)) then false else Bernoulli(LIGHT_PROB);
		green_light'(?m) = if (green_light(?m)) then false else Bernoulli(LIGHT_PROB);
	
	};
  
	reward = [sum_{?m : machine} [if (active(?m) * light(?m) > 0) then PAYOUT(?m) else [if (active(?m)) then -1 else 0]]];
}